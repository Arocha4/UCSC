% Antoine Rocha
% arocha4
% extra credit
% matrix_inverse
% returnss the inverse of an n x n matrix that can be computed by using leverrier algorithm
% in (n-1)^3

% inputs 
% A: invertible matrix

% output
% Ai: inverse of the matrix A
% Ai = ()
  
% reffernce: https://www.mathworks.com/examples/matlab/community/36069-faddeev-leverrier-algorithm#1
% cell array(n) = A*(cellarray{n-1}-coefvect(n-1)*I from refference 
% example input
% A=[3 5 0; 2 4 -3; 10 15 20];

function [Ai] = matrix_inverse(A) % function given to complete

[j,l]=size(A);  % initialize array and capture the arguments of size(A)
[Carr{1:j}]=deal(A); % initialize Carr cell array of the sequenecy of matricies generated,
Coefvect=ones(1,j+1);  % inintalize coefficient vector of the characteristic polynomial

for i=2:j  % loop that finds the coefficient vector coefvect
  
  Coefvect(i)=-trace(Carr{i-1})/(i-1);  %  set coefficientvector of char poly using - sum of diag elements 
   
   Carr{i}=A*(Carr{i-1}+Coefvect(i)*eye(j)); % compute sequenecy of matrices 
end

Coefvect(j+1)=-trace(Carr{j})/j;  % set coefvect(j+1) to compute  A inverse

Ainverse=-(Carr{j-1}+Coefvect(j)*eye(j))/Coefvect(j+1); % compute Ainverse reffer to reffernce link

Ai = Ainverse;  % adust  proper output

%whos; % list variblaes within the work space with size and types
end
% This was a hard algorithm to complete but there was a matlab refference that aided me
% which was listed in the url above and a matlab tutorial on youtube on matrix Determineates
% inverses, trace, and rank. This matlab tutorial really helped. in addittion to section
% I compared the output using the built in fucniton inv(a) and got the same answer.
